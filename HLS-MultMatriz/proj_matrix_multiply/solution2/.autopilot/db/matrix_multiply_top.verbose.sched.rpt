

================================================================
== Vivado HLS Report for 'matrix_multiply_top'
================================================================
* Date:           Wed Dec 19 00:32:43 2018

* Version:        2018.3 (Build 2405991 on Thu Dec 06 23:56:15 MST 2018)
* Project:        proj_matrix_multiply
* Solution:       solution2
* Product family: kintex7
* Target device:  xc7k70tfbv676-3


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   1.00|     1.534|        0.13|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+----------+
    |  Latency  |  Interval | Pipeline |
    | min | max | min | max |   Type   |
    +-----+-----+-----+-----+----------+
    |   57|   57|   51|   51| function |
    +-----+-----+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 1
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 51, depth = 58


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 58
* Pipeline : 1
  Pipeline-0 : II = 51, D = 58, States = { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / true
38 --> 
	39  / true
39 --> 
	40  / true
40 --> 
	41  / true
41 --> 
	42  / true
42 --> 
	43  / true
43 --> 
	44  / true
44 --> 
	45  / true
45 --> 
	46  / true
46 --> 
	47  / true
47 --> 
	48  / true
48 --> 
	49  / true
49 --> 
	50  / true
50 --> 
	51  / true
51 --> 
	52  / true
52 --> 
	53  / true
53 --> 
	54  / true
54 --> 
	55  / true
55 --> 
	56  / true
56 --> 
	57  / true
57 --> 
	58  / true
58 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.96>
ST_1 : Operation 59 [1/1] (0.00ns)   --->   "%A_addr = getelementptr [9 x float]* %A, i64 0, i64 0" [matrix_multiply.cpp:47]   --->   Operation 59 'getelementptr' 'A_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 60 [1/1] (0.00ns)   --->   "%A_addr_1 = getelementptr [9 x float]* %A, i64 0, i64 1" [matrix_multiply.cpp:47]   --->   Operation 60 'getelementptr' 'A_addr_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 61 [1/1] (0.00ns)   --->   "%B_addr = getelementptr [9 x float]* %B, i64 0, i64 0" [matrix_multiply.cpp:52]   --->   Operation 61 'getelementptr' 'B_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 62 [1/1] (0.00ns)   --->   "%B_addr_1 = getelementptr [9 x float]* %B, i64 0, i64 1" [matrix_multiply.cpp:52]   --->   Operation 62 'getelementptr' 'B_addr_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 63 [1/1] (0.00ns)   --->   "%a_i = alloca [9 x float], align 4" [matrix_multiply.cpp:40]   --->   Operation 63 'alloca' 'a_i' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.96> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_1 : Operation 64 [1/1] (0.00ns)   --->   "%b_i = alloca [9 x float], align 4" [matrix_multiply.cpp:41]   --->   Operation 64 'alloca' 'b_i' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.96> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_1 : Operation 65 [2/2] (0.96ns)   --->   "%A_load = load float* %A_addr, align 4" [matrix_multiply.cpp:47]   --->   Operation 65 'load' 'A_load' <Predicate = true> <Delay = 0.96> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.96> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_1 : Operation 66 [2/2] (0.96ns)   --->   "%A_load_1 = load float* %A_addr_1, align 4" [matrix_multiply.cpp:47]   --->   Operation 66 'load' 'A_load_1' <Predicate = true> <Delay = 0.96> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.96> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_1 : Operation 67 [2/2] (0.96ns)   --->   "%B_load = load float* %B_addr, align 4" [matrix_multiply.cpp:52]   --->   Operation 67 'load' 'B_load' <Predicate = true> <Delay = 0.96> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.96> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_1 : Operation 68 [2/2] (0.96ns)   --->   "%B_load_1 = load float* %B_addr_1, align 4" [matrix_multiply.cpp:52]   --->   Operation 68 'load' 'B_load_1' <Predicate = true> <Delay = 0.96> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.96> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>

State 2 <SV = 1> <Delay = 0.96>
ST_2 : Operation 69 [1/1] (0.00ns)   --->   "%A_addr_2 = getelementptr [9 x float]* %A, i64 0, i64 2" [matrix_multiply.cpp:47]   --->   Operation 69 'getelementptr' 'A_addr_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 70 [1/1] (0.00ns)   --->   "%A_addr_3 = getelementptr [9 x float]* %A, i64 0, i64 3" [matrix_multiply.cpp:47]   --->   Operation 70 'getelementptr' 'A_addr_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 71 [1/1] (0.00ns)   --->   "%B_addr_2 = getelementptr [9 x float]* %B, i64 0, i64 2" [matrix_multiply.cpp:52]   --->   Operation 71 'getelementptr' 'B_addr_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 72 [1/1] (0.00ns)   --->   "%B_addr_3 = getelementptr [9 x float]* %B, i64 0, i64 3" [matrix_multiply.cpp:52]   --->   Operation 72 'getelementptr' 'B_addr_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 73 [1/2] (0.96ns)   --->   "%A_load = load float* %A_addr, align 4" [matrix_multiply.cpp:47]   --->   Operation 73 'load' 'A_load' <Predicate = true> <Delay = 0.96> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.96> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_2 : Operation 74 [1/2] (0.96ns)   --->   "%A_load_1 = load float* %A_addr_1, align 4" [matrix_multiply.cpp:47]   --->   Operation 74 'load' 'A_load_1' <Predicate = true> <Delay = 0.96> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.96> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_2 : Operation 75 [2/2] (0.96ns)   --->   "%A_load_2 = load float* %A_addr_2, align 4" [matrix_multiply.cpp:47]   --->   Operation 75 'load' 'A_load_2' <Predicate = true> <Delay = 0.96> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.96> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_2 : Operation 76 [2/2] (0.96ns)   --->   "%A_load_3 = load float* %A_addr_3, align 4" [matrix_multiply.cpp:47]   --->   Operation 76 'load' 'A_load_3' <Predicate = true> <Delay = 0.96> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.96> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_2 : Operation 77 [1/2] (0.96ns)   --->   "%B_load = load float* %B_addr, align 4" [matrix_multiply.cpp:52]   --->   Operation 77 'load' 'B_load' <Predicate = true> <Delay = 0.96> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.96> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_2 : Operation 78 [1/2] (0.96ns)   --->   "%B_load_1 = load float* %B_addr_1, align 4" [matrix_multiply.cpp:52]   --->   Operation 78 'load' 'B_load_1' <Predicate = true> <Delay = 0.96> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.96> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_2 : Operation 79 [2/2] (0.96ns)   --->   "%B_load_2 = load float* %B_addr_2, align 4" [matrix_multiply.cpp:52]   --->   Operation 79 'load' 'B_load_2' <Predicate = true> <Delay = 0.96> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.96> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_2 : Operation 80 [2/2] (0.96ns)   --->   "%B_load_3 = load float* %B_addr_3, align 4" [matrix_multiply.cpp:52]   --->   Operation 80 'load' 'B_load_3' <Predicate = true> <Delay = 0.96> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.96> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>

State 3 <SV = 2> <Delay = 0.96>
ST_3 : Operation 81 [1/1] (0.00ns)   --->   "%A_addr_4 = getelementptr [9 x float]* %A, i64 0, i64 4" [matrix_multiply.cpp:47]   --->   Operation 81 'getelementptr' 'A_addr_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 82 [1/1] (0.00ns)   --->   "%A_addr_5 = getelementptr [9 x float]* %A, i64 0, i64 5" [matrix_multiply.cpp:47]   --->   Operation 82 'getelementptr' 'A_addr_5' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 83 [1/1] (0.00ns)   --->   "%B_addr_4 = getelementptr [9 x float]* %B, i64 0, i64 4" [matrix_multiply.cpp:52]   --->   Operation 83 'getelementptr' 'B_addr_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 84 [1/1] (0.00ns)   --->   "%B_addr_5 = getelementptr [9 x float]* %B, i64 0, i64 5" [matrix_multiply.cpp:52]   --->   Operation 84 'getelementptr' 'B_addr_5' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 85 [1/1] (0.00ns)   --->   "%a_i_addr = getelementptr [9 x float]* %a_i, i64 0, i64 0" [matrix_multiply.cpp:47]   --->   Operation 85 'getelementptr' 'a_i_addr' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 86 [1/1] (0.00ns)   --->   "%a_i_addr_1 = getelementptr [9 x float]* %a_i, i64 0, i64 1" [matrix_multiply.cpp:47]   --->   Operation 86 'getelementptr' 'a_i_addr_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 87 [1/1] (0.00ns)   --->   "%b_i_addr = getelementptr [9 x float]* %b_i, i64 0, i64 0" [matrix_multiply.cpp:52]   --->   Operation 87 'getelementptr' 'b_i_addr' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 88 [1/1] (0.00ns)   --->   "%b_i_addr_1 = getelementptr [9 x float]* %b_i, i64 0, i64 1" [matrix_multiply.cpp:52]   --->   Operation 88 'getelementptr' 'b_i_addr_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 89 [1/1] (0.96ns)   --->   "store float %A_load, float* %a_i_addr, align 16" [matrix_multiply.cpp:47]   --->   Operation 89 'store' <Predicate = true> <Delay = 0.96> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.96> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_3 : Operation 90 [1/1] (0.96ns)   --->   "store float %A_load_1, float* %a_i_addr_1, align 4" [matrix_multiply.cpp:47]   --->   Operation 90 'store' <Predicate = true> <Delay = 0.96> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.96> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_3 : Operation 91 [1/2] (0.96ns)   --->   "%A_load_2 = load float* %A_addr_2, align 4" [matrix_multiply.cpp:47]   --->   Operation 91 'load' 'A_load_2' <Predicate = true> <Delay = 0.96> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.96> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_3 : Operation 92 [1/2] (0.96ns)   --->   "%A_load_3 = load float* %A_addr_3, align 4" [matrix_multiply.cpp:47]   --->   Operation 92 'load' 'A_load_3' <Predicate = true> <Delay = 0.96> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.96> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_3 : Operation 93 [2/2] (0.96ns)   --->   "%A_load_4 = load float* %A_addr_4, align 4" [matrix_multiply.cpp:47]   --->   Operation 93 'load' 'A_load_4' <Predicate = true> <Delay = 0.96> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.96> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_3 : Operation 94 [2/2] (0.96ns)   --->   "%A_load_5 = load float* %A_addr_5, align 4" [matrix_multiply.cpp:47]   --->   Operation 94 'load' 'A_load_5' <Predicate = true> <Delay = 0.96> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.96> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_3 : Operation 95 [1/1] (0.96ns)   --->   "store float %B_load, float* %b_i_addr, align 16" [matrix_multiply.cpp:52]   --->   Operation 95 'store' <Predicate = true> <Delay = 0.96> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.96> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_3 : Operation 96 [1/1] (0.96ns)   --->   "store float %B_load_1, float* %b_i_addr_1, align 4" [matrix_multiply.cpp:52]   --->   Operation 96 'store' <Predicate = true> <Delay = 0.96> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.96> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_3 : Operation 97 [1/2] (0.96ns)   --->   "%B_load_2 = load float* %B_addr_2, align 4" [matrix_multiply.cpp:52]   --->   Operation 97 'load' 'B_load_2' <Predicate = true> <Delay = 0.96> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.96> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_3 : Operation 98 [1/2] (0.96ns)   --->   "%B_load_3 = load float* %B_addr_3, align 4" [matrix_multiply.cpp:52]   --->   Operation 98 'load' 'B_load_3' <Predicate = true> <Delay = 0.96> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.96> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_3 : Operation 99 [2/2] (0.96ns)   --->   "%B_load_4 = load float* %B_addr_4, align 4" [matrix_multiply.cpp:52]   --->   Operation 99 'load' 'B_load_4' <Predicate = true> <Delay = 0.96> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.96> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_3 : Operation 100 [2/2] (0.96ns)   --->   "%B_load_5 = load float* %B_addr_5, align 4" [matrix_multiply.cpp:52]   --->   Operation 100 'load' 'B_load_5' <Predicate = true> <Delay = 0.96> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.96> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>

State 4 <SV = 3> <Delay = 0.96>
ST_4 : Operation 101 [1/1] (0.00ns)   --->   "%A_addr_6 = getelementptr [9 x float]* %A, i64 0, i64 6" [matrix_multiply.cpp:47]   --->   Operation 101 'getelementptr' 'A_addr_6' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 102 [1/1] (0.00ns)   --->   "%A_addr_7 = getelementptr [9 x float]* %A, i64 0, i64 7" [matrix_multiply.cpp:47]   --->   Operation 102 'getelementptr' 'A_addr_7' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 103 [1/1] (0.00ns)   --->   "%B_addr_6 = getelementptr [9 x float]* %B, i64 0, i64 6" [matrix_multiply.cpp:52]   --->   Operation 103 'getelementptr' 'B_addr_6' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 104 [1/1] (0.00ns)   --->   "%B_addr_7 = getelementptr [9 x float]* %B, i64 0, i64 7" [matrix_multiply.cpp:52]   --->   Operation 104 'getelementptr' 'B_addr_7' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 105 [1/1] (0.00ns)   --->   "%a_i_addr_2 = getelementptr [9 x float]* %a_i, i64 0, i64 2" [matrix_multiply.cpp:47]   --->   Operation 105 'getelementptr' 'a_i_addr_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 106 [1/1] (0.00ns)   --->   "%a_i_addr_3 = getelementptr [9 x float]* %a_i, i64 0, i64 3" [matrix_multiply.cpp:47]   --->   Operation 106 'getelementptr' 'a_i_addr_3' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 107 [1/1] (0.00ns)   --->   "%b_i_addr_2 = getelementptr [9 x float]* %b_i, i64 0, i64 2" [matrix_multiply.cpp:52]   --->   Operation 107 'getelementptr' 'b_i_addr_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 108 [1/1] (0.00ns)   --->   "%b_i_addr_3 = getelementptr [9 x float]* %b_i, i64 0, i64 3" [matrix_multiply.cpp:52]   --->   Operation 108 'getelementptr' 'b_i_addr_3' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 109 [1/1] (0.96ns)   --->   "store float %A_load_2, float* %a_i_addr_2, align 8" [matrix_multiply.cpp:47]   --->   Operation 109 'store' <Predicate = true> <Delay = 0.96> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.96> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_4 : Operation 110 [1/1] (0.96ns)   --->   "store float %A_load_3, float* %a_i_addr_3, align 4" [matrix_multiply.cpp:47]   --->   Operation 110 'store' <Predicate = true> <Delay = 0.96> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.96> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_4 : Operation 111 [1/2] (0.96ns)   --->   "%A_load_4 = load float* %A_addr_4, align 4" [matrix_multiply.cpp:47]   --->   Operation 111 'load' 'A_load_4' <Predicate = true> <Delay = 0.96> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.96> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_4 : Operation 112 [1/2] (0.96ns)   --->   "%A_load_5 = load float* %A_addr_5, align 4" [matrix_multiply.cpp:47]   --->   Operation 112 'load' 'A_load_5' <Predicate = true> <Delay = 0.96> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.96> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_4 : Operation 113 [2/2] (0.96ns)   --->   "%A_load_6 = load float* %A_addr_6, align 4" [matrix_multiply.cpp:47]   --->   Operation 113 'load' 'A_load_6' <Predicate = true> <Delay = 0.96> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.96> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_4 : Operation 114 [2/2] (0.96ns)   --->   "%A_load_7 = load float* %A_addr_7, align 4" [matrix_multiply.cpp:47]   --->   Operation 114 'load' 'A_load_7' <Predicate = true> <Delay = 0.96> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.96> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_4 : Operation 115 [1/1] (0.96ns)   --->   "store float %B_load_2, float* %b_i_addr_2, align 8" [matrix_multiply.cpp:52]   --->   Operation 115 'store' <Predicate = true> <Delay = 0.96> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.96> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_4 : Operation 116 [1/1] (0.96ns)   --->   "store float %B_load_3, float* %b_i_addr_3, align 4" [matrix_multiply.cpp:52]   --->   Operation 116 'store' <Predicate = true> <Delay = 0.96> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.96> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_4 : Operation 117 [1/2] (0.96ns)   --->   "%B_load_4 = load float* %B_addr_4, align 4" [matrix_multiply.cpp:52]   --->   Operation 117 'load' 'B_load_4' <Predicate = true> <Delay = 0.96> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.96> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_4 : Operation 118 [1/2] (0.96ns)   --->   "%B_load_5 = load float* %B_addr_5, align 4" [matrix_multiply.cpp:52]   --->   Operation 118 'load' 'B_load_5' <Predicate = true> <Delay = 0.96> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.96> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_4 : Operation 119 [2/2] (0.96ns)   --->   "%B_load_6 = load float* %B_addr_6, align 4" [matrix_multiply.cpp:52]   --->   Operation 119 'load' 'B_load_6' <Predicate = true> <Delay = 0.96> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.96> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_4 : Operation 120 [2/2] (0.96ns)   --->   "%B_load_7 = load float* %B_addr_7, align 4" [matrix_multiply.cpp:52]   --->   Operation 120 'load' 'B_load_7' <Predicate = true> <Delay = 0.96> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.96> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>

State 5 <SV = 4> <Delay = 0.96>
ST_5 : Operation 121 [1/1] (0.00ns)   --->   "%A_addr_8 = getelementptr [9 x float]* %A, i64 0, i64 8" [matrix_multiply.cpp:47]   --->   Operation 121 'getelementptr' 'A_addr_8' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 122 [1/1] (0.00ns)   --->   "%B_addr_8 = getelementptr [9 x float]* %B, i64 0, i64 8" [matrix_multiply.cpp:52]   --->   Operation 122 'getelementptr' 'B_addr_8' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 123 [1/1] (0.00ns)   --->   "%a_i_addr_4 = getelementptr [9 x float]* %a_i, i64 0, i64 4" [matrix_multiply.cpp:47]   --->   Operation 123 'getelementptr' 'a_i_addr_4' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 124 [1/1] (0.00ns)   --->   "%a_i_addr_5 = getelementptr [9 x float]* %a_i, i64 0, i64 5" [matrix_multiply.cpp:47]   --->   Operation 124 'getelementptr' 'a_i_addr_5' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 125 [1/1] (0.00ns)   --->   "%b_i_addr_4 = getelementptr [9 x float]* %b_i, i64 0, i64 4" [matrix_multiply.cpp:52]   --->   Operation 125 'getelementptr' 'b_i_addr_4' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 126 [1/1] (0.00ns)   --->   "%b_i_addr_5 = getelementptr [9 x float]* %b_i, i64 0, i64 5" [matrix_multiply.cpp:52]   --->   Operation 126 'getelementptr' 'b_i_addr_5' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 127 [1/1] (0.96ns)   --->   "store float %A_load_4, float* %a_i_addr_4, align 4" [matrix_multiply.cpp:47]   --->   Operation 127 'store' <Predicate = true> <Delay = 0.96> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.96> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_5 : Operation 128 [1/1] (0.96ns)   --->   "store float %A_load_5, float* %a_i_addr_5, align 4" [matrix_multiply.cpp:47]   --->   Operation 128 'store' <Predicate = true> <Delay = 0.96> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.96> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_5 : Operation 129 [1/2] (0.96ns)   --->   "%A_load_6 = load float* %A_addr_6, align 4" [matrix_multiply.cpp:47]   --->   Operation 129 'load' 'A_load_6' <Predicate = true> <Delay = 0.96> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.96> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_5 : Operation 130 [1/2] (0.96ns)   --->   "%A_load_7 = load float* %A_addr_7, align 4" [matrix_multiply.cpp:47]   --->   Operation 130 'load' 'A_load_7' <Predicate = true> <Delay = 0.96> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.96> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_5 : Operation 131 [2/2] (0.96ns)   --->   "%A_load_8 = load float* %A_addr_8, align 4" [matrix_multiply.cpp:47]   --->   Operation 131 'load' 'A_load_8' <Predicate = true> <Delay = 0.96> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.96> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_5 : Operation 132 [1/1] (0.96ns)   --->   "store float %B_load_4, float* %b_i_addr_4, align 4" [matrix_multiply.cpp:52]   --->   Operation 132 'store' <Predicate = true> <Delay = 0.96> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.96> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_5 : Operation 133 [1/1] (0.96ns)   --->   "store float %B_load_5, float* %b_i_addr_5, align 4" [matrix_multiply.cpp:52]   --->   Operation 133 'store' <Predicate = true> <Delay = 0.96> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.96> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_5 : Operation 134 [1/2] (0.96ns)   --->   "%B_load_6 = load float* %B_addr_6, align 4" [matrix_multiply.cpp:52]   --->   Operation 134 'load' 'B_load_6' <Predicate = true> <Delay = 0.96> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.96> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_5 : Operation 135 [1/2] (0.96ns)   --->   "%B_load_7 = load float* %B_addr_7, align 4" [matrix_multiply.cpp:52]   --->   Operation 135 'load' 'B_load_7' <Predicate = true> <Delay = 0.96> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.96> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_5 : Operation 136 [2/2] (0.96ns)   --->   "%B_load_8 = load float* %B_addr_8, align 4" [matrix_multiply.cpp:52]   --->   Operation 136 'load' 'B_load_8' <Predicate = true> <Delay = 0.96> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.96> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>

State 6 <SV = 5> <Delay = 0.96>
ST_6 : Operation 137 [1/1] (0.00ns)   --->   "%a_i_addr_6 = getelementptr [9 x float]* %a_i, i64 0, i64 6" [matrix_multiply.cpp:47]   --->   Operation 137 'getelementptr' 'a_i_addr_6' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 138 [1/1] (0.00ns)   --->   "%a_i_addr_7 = getelementptr [9 x float]* %a_i, i64 0, i64 7" [matrix_multiply.cpp:47]   --->   Operation 138 'getelementptr' 'a_i_addr_7' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 139 [1/1] (0.00ns)   --->   "%b_i_addr_6 = getelementptr [9 x float]* %b_i, i64 0, i64 6" [matrix_multiply.cpp:52]   --->   Operation 139 'getelementptr' 'b_i_addr_6' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 140 [1/1] (0.00ns)   --->   "%b_i_addr_7 = getelementptr [9 x float]* %b_i, i64 0, i64 7" [matrix_multiply.cpp:52]   --->   Operation 140 'getelementptr' 'b_i_addr_7' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 141 [1/1] (0.96ns)   --->   "store float %A_load_6, float* %a_i_addr_6, align 8" [matrix_multiply.cpp:47]   --->   Operation 141 'store' <Predicate = true> <Delay = 0.96> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.96> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_6 : Operation 142 [1/1] (0.96ns)   --->   "store float %A_load_7, float* %a_i_addr_7, align 4" [matrix_multiply.cpp:47]   --->   Operation 142 'store' <Predicate = true> <Delay = 0.96> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.96> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_6 : Operation 143 [1/2] (0.96ns)   --->   "%A_load_8 = load float* %A_addr_8, align 4" [matrix_multiply.cpp:47]   --->   Operation 143 'load' 'A_load_8' <Predicate = true> <Delay = 0.96> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.96> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_6 : Operation 144 [1/1] (0.96ns)   --->   "store float %B_load_6, float* %b_i_addr_6, align 8" [matrix_multiply.cpp:52]   --->   Operation 144 'store' <Predicate = true> <Delay = 0.96> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.96> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_6 : Operation 145 [1/1] (0.96ns)   --->   "store float %B_load_7, float* %b_i_addr_7, align 4" [matrix_multiply.cpp:52]   --->   Operation 145 'store' <Predicate = true> <Delay = 0.96> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.96> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_6 : Operation 146 [1/2] (0.96ns)   --->   "%B_load_8 = load float* %B_addr_8, align 4" [matrix_multiply.cpp:52]   --->   Operation 146 'load' 'B_load_8' <Predicate = true> <Delay = 0.96> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.96> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>

State 7 <SV = 6> <Delay = 0.96>
ST_7 : Operation 147 [1/1] (0.00ns)   --->   "%a_i_addr_8 = getelementptr [9 x float]* %a_i, i64 0, i64 8" [matrix_multiply.cpp:47]   --->   Operation 147 'getelementptr' 'a_i_addr_8' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 148 [1/1] (0.00ns)   --->   "%b_i_addr_8 = getelementptr [9 x float]* %b_i, i64 0, i64 8" [matrix_multiply.cpp:52]   --->   Operation 148 'getelementptr' 'b_i_addr_8' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 149 [1/1] (0.96ns)   --->   "store float %A_load_8, float* %a_i_addr_8, align 8" [matrix_multiply.cpp:47]   --->   Operation 149 'store' <Predicate = true> <Delay = 0.96> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.96> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_7 : Operation 150 [1/1] (0.96ns)   --->   "store float %B_load_8, float* %b_i_addr_8, align 8" [matrix_multiply.cpp:52]   --->   Operation 150 'store' <Predicate = true> <Delay = 0.96> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.96> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>

State 8 <SV = 7> <Delay = 0.00>
ST_8 : Operation 151 [46/46] (0.00ns)   --->   "%call_ret_i1 = call fastcc { float, float, float, float, float, float, float, float, float } @matrix_multiply_top.1([9 x float]* %a_i, [9 x float]* %b_i) nounwind" [D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57]   --->   Operation 151 'call' 'call_ret_i1' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 9 <SV = 8> <Delay = 0.87>
ST_9 : Operation 152 [45/46] (0.87ns)   --->   "%call_ret_i1 = call fastcc { float, float, float, float, float, float, float, float, float } @matrix_multiply_top.1([9 x float]* %a_i, [9 x float]* %b_i) nounwind" [D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57]   --->   Operation 152 'call' 'call_ret_i1' <Predicate = true> <Delay = 0.87> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 10 <SV = 9> <Delay = 0.87>
ST_10 : Operation 153 [44/46] (0.87ns)   --->   "%call_ret_i1 = call fastcc { float, float, float, float, float, float, float, float, float } @matrix_multiply_top.1([9 x float]* %a_i, [9 x float]* %b_i) nounwind" [D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57]   --->   Operation 153 'call' 'call_ret_i1' <Predicate = true> <Delay = 0.87> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 11 <SV = 10> <Delay = 0.87>
ST_11 : Operation 154 [43/46] (0.87ns)   --->   "%call_ret_i1 = call fastcc { float, float, float, float, float, float, float, float, float } @matrix_multiply_top.1([9 x float]* %a_i, [9 x float]* %b_i) nounwind" [D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57]   --->   Operation 154 'call' 'call_ret_i1' <Predicate = true> <Delay = 0.87> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 12 <SV = 11> <Delay = 0.87>
ST_12 : Operation 155 [42/46] (0.87ns)   --->   "%call_ret_i1 = call fastcc { float, float, float, float, float, float, float, float, float } @matrix_multiply_top.1([9 x float]* %a_i, [9 x float]* %b_i) nounwind" [D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57]   --->   Operation 155 'call' 'call_ret_i1' <Predicate = true> <Delay = 0.87> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 13 <SV = 12> <Delay = 0.87>
ST_13 : Operation 156 [41/46] (0.87ns)   --->   "%call_ret_i1 = call fastcc { float, float, float, float, float, float, float, float, float } @matrix_multiply_top.1([9 x float]* %a_i, [9 x float]* %b_i) nounwind" [D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57]   --->   Operation 156 'call' 'call_ret_i1' <Predicate = true> <Delay = 0.87> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 14 <SV = 13> <Delay = 0.87>
ST_14 : Operation 157 [40/46] (0.87ns)   --->   "%call_ret_i1 = call fastcc { float, float, float, float, float, float, float, float, float } @matrix_multiply_top.1([9 x float]* %a_i, [9 x float]* %b_i) nounwind" [D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57]   --->   Operation 157 'call' 'call_ret_i1' <Predicate = true> <Delay = 0.87> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 15 <SV = 14> <Delay = 0.87>
ST_15 : Operation 158 [39/46] (0.87ns)   --->   "%call_ret_i1 = call fastcc { float, float, float, float, float, float, float, float, float } @matrix_multiply_top.1([9 x float]* %a_i, [9 x float]* %b_i) nounwind" [D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57]   --->   Operation 158 'call' 'call_ret_i1' <Predicate = true> <Delay = 0.87> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 16 <SV = 15> <Delay = 0.87>
ST_16 : Operation 159 [38/46] (0.87ns)   --->   "%call_ret_i1 = call fastcc { float, float, float, float, float, float, float, float, float } @matrix_multiply_top.1([9 x float]* %a_i, [9 x float]* %b_i) nounwind" [D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57]   --->   Operation 159 'call' 'call_ret_i1' <Predicate = true> <Delay = 0.87> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 17 <SV = 16> <Delay = 0.87>
ST_17 : Operation 160 [37/46] (0.87ns)   --->   "%call_ret_i1 = call fastcc { float, float, float, float, float, float, float, float, float } @matrix_multiply_top.1([9 x float]* %a_i, [9 x float]* %b_i) nounwind" [D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57]   --->   Operation 160 'call' 'call_ret_i1' <Predicate = true> <Delay = 0.87> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 18 <SV = 17> <Delay = 0.87>
ST_18 : Operation 161 [36/46] (0.87ns)   --->   "%call_ret_i1 = call fastcc { float, float, float, float, float, float, float, float, float } @matrix_multiply_top.1([9 x float]* %a_i, [9 x float]* %b_i) nounwind" [D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57]   --->   Operation 161 'call' 'call_ret_i1' <Predicate = true> <Delay = 0.87> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 19 <SV = 18> <Delay = 0.87>
ST_19 : Operation 162 [35/46] (0.87ns)   --->   "%call_ret_i1 = call fastcc { float, float, float, float, float, float, float, float, float } @matrix_multiply_top.1([9 x float]* %a_i, [9 x float]* %b_i) nounwind" [D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57]   --->   Operation 162 'call' 'call_ret_i1' <Predicate = true> <Delay = 0.87> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 20 <SV = 19> <Delay = 0.87>
ST_20 : Operation 163 [34/46] (0.87ns)   --->   "%call_ret_i1 = call fastcc { float, float, float, float, float, float, float, float, float } @matrix_multiply_top.1([9 x float]* %a_i, [9 x float]* %b_i) nounwind" [D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57]   --->   Operation 163 'call' 'call_ret_i1' <Predicate = true> <Delay = 0.87> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 21 <SV = 20> <Delay = 0.87>
ST_21 : Operation 164 [33/46] (0.87ns)   --->   "%call_ret_i1 = call fastcc { float, float, float, float, float, float, float, float, float } @matrix_multiply_top.1([9 x float]* %a_i, [9 x float]* %b_i) nounwind" [D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57]   --->   Operation 164 'call' 'call_ret_i1' <Predicate = true> <Delay = 0.87> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 22 <SV = 21> <Delay = 0.87>
ST_22 : Operation 165 [32/46] (0.87ns)   --->   "%call_ret_i1 = call fastcc { float, float, float, float, float, float, float, float, float } @matrix_multiply_top.1([9 x float]* %a_i, [9 x float]* %b_i) nounwind" [D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57]   --->   Operation 165 'call' 'call_ret_i1' <Predicate = true> <Delay = 0.87> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 23 <SV = 22> <Delay = 0.87>
ST_23 : Operation 166 [31/46] (0.87ns)   --->   "%call_ret_i1 = call fastcc { float, float, float, float, float, float, float, float, float } @matrix_multiply_top.1([9 x float]* %a_i, [9 x float]* %b_i) nounwind" [D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57]   --->   Operation 166 'call' 'call_ret_i1' <Predicate = true> <Delay = 0.87> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 24 <SV = 23> <Delay = 0.87>
ST_24 : Operation 167 [30/46] (0.87ns)   --->   "%call_ret_i1 = call fastcc { float, float, float, float, float, float, float, float, float } @matrix_multiply_top.1([9 x float]* %a_i, [9 x float]* %b_i) nounwind" [D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57]   --->   Operation 167 'call' 'call_ret_i1' <Predicate = true> <Delay = 0.87> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 25 <SV = 24> <Delay = 0.87>
ST_25 : Operation 168 [29/46] (0.87ns)   --->   "%call_ret_i1 = call fastcc { float, float, float, float, float, float, float, float, float } @matrix_multiply_top.1([9 x float]* %a_i, [9 x float]* %b_i) nounwind" [D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57]   --->   Operation 168 'call' 'call_ret_i1' <Predicate = true> <Delay = 0.87> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 26 <SV = 25> <Delay = 0.87>
ST_26 : Operation 169 [28/46] (0.87ns)   --->   "%call_ret_i1 = call fastcc { float, float, float, float, float, float, float, float, float } @matrix_multiply_top.1([9 x float]* %a_i, [9 x float]* %b_i) nounwind" [D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57]   --->   Operation 169 'call' 'call_ret_i1' <Predicate = true> <Delay = 0.87> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 27 <SV = 26> <Delay = 0.87>
ST_27 : Operation 170 [27/46] (0.87ns)   --->   "%call_ret_i1 = call fastcc { float, float, float, float, float, float, float, float, float } @matrix_multiply_top.1([9 x float]* %a_i, [9 x float]* %b_i) nounwind" [D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57]   --->   Operation 170 'call' 'call_ret_i1' <Predicate = true> <Delay = 0.87> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 28 <SV = 27> <Delay = 0.87>
ST_28 : Operation 171 [26/46] (0.87ns)   --->   "%call_ret_i1 = call fastcc { float, float, float, float, float, float, float, float, float } @matrix_multiply_top.1([9 x float]* %a_i, [9 x float]* %b_i) nounwind" [D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57]   --->   Operation 171 'call' 'call_ret_i1' <Predicate = true> <Delay = 0.87> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 29 <SV = 28> <Delay = 0.87>
ST_29 : Operation 172 [25/46] (0.87ns)   --->   "%call_ret_i1 = call fastcc { float, float, float, float, float, float, float, float, float } @matrix_multiply_top.1([9 x float]* %a_i, [9 x float]* %b_i) nounwind" [D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57]   --->   Operation 172 'call' 'call_ret_i1' <Predicate = true> <Delay = 0.87> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 30 <SV = 29> <Delay = 0.87>
ST_30 : Operation 173 [24/46] (0.87ns)   --->   "%call_ret_i1 = call fastcc { float, float, float, float, float, float, float, float, float } @matrix_multiply_top.1([9 x float]* %a_i, [9 x float]* %b_i) nounwind" [D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57]   --->   Operation 173 'call' 'call_ret_i1' <Predicate = true> <Delay = 0.87> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 31 <SV = 30> <Delay = 0.87>
ST_31 : Operation 174 [23/46] (0.87ns)   --->   "%call_ret_i1 = call fastcc { float, float, float, float, float, float, float, float, float } @matrix_multiply_top.1([9 x float]* %a_i, [9 x float]* %b_i) nounwind" [D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57]   --->   Operation 174 'call' 'call_ret_i1' <Predicate = true> <Delay = 0.87> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 32 <SV = 31> <Delay = 0.87>
ST_32 : Operation 175 [22/46] (0.87ns)   --->   "%call_ret_i1 = call fastcc { float, float, float, float, float, float, float, float, float } @matrix_multiply_top.1([9 x float]* %a_i, [9 x float]* %b_i) nounwind" [D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57]   --->   Operation 175 'call' 'call_ret_i1' <Predicate = true> <Delay = 0.87> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 33 <SV = 32> <Delay = 0.87>
ST_33 : Operation 176 [21/46] (0.87ns)   --->   "%call_ret_i1 = call fastcc { float, float, float, float, float, float, float, float, float } @matrix_multiply_top.1([9 x float]* %a_i, [9 x float]* %b_i) nounwind" [D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57]   --->   Operation 176 'call' 'call_ret_i1' <Predicate = true> <Delay = 0.87> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 34 <SV = 33> <Delay = 0.87>
ST_34 : Operation 177 [20/46] (0.87ns)   --->   "%call_ret_i1 = call fastcc { float, float, float, float, float, float, float, float, float } @matrix_multiply_top.1([9 x float]* %a_i, [9 x float]* %b_i) nounwind" [D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57]   --->   Operation 177 'call' 'call_ret_i1' <Predicate = true> <Delay = 0.87> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 35 <SV = 34> <Delay = 0.87>
ST_35 : Operation 178 [19/46] (0.87ns)   --->   "%call_ret_i1 = call fastcc { float, float, float, float, float, float, float, float, float } @matrix_multiply_top.1([9 x float]* %a_i, [9 x float]* %b_i) nounwind" [D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57]   --->   Operation 178 'call' 'call_ret_i1' <Predicate = true> <Delay = 0.87> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 36 <SV = 35> <Delay = 0.87>
ST_36 : Operation 179 [18/46] (0.87ns)   --->   "%call_ret_i1 = call fastcc { float, float, float, float, float, float, float, float, float } @matrix_multiply_top.1([9 x float]* %a_i, [9 x float]* %b_i) nounwind" [D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57]   --->   Operation 179 'call' 'call_ret_i1' <Predicate = true> <Delay = 0.87> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 37 <SV = 36> <Delay = 0.87>
ST_37 : Operation 180 [17/46] (0.87ns)   --->   "%call_ret_i1 = call fastcc { float, float, float, float, float, float, float, float, float } @matrix_multiply_top.1([9 x float]* %a_i, [9 x float]* %b_i) nounwind" [D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57]   --->   Operation 180 'call' 'call_ret_i1' <Predicate = true> <Delay = 0.87> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 38 <SV = 37> <Delay = 0.87>
ST_38 : Operation 181 [16/46] (0.87ns)   --->   "%call_ret_i1 = call fastcc { float, float, float, float, float, float, float, float, float } @matrix_multiply_top.1([9 x float]* %a_i, [9 x float]* %b_i) nounwind" [D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57]   --->   Operation 181 'call' 'call_ret_i1' <Predicate = true> <Delay = 0.87> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 39 <SV = 38> <Delay = 0.87>
ST_39 : Operation 182 [15/46] (0.87ns)   --->   "%call_ret_i1 = call fastcc { float, float, float, float, float, float, float, float, float } @matrix_multiply_top.1([9 x float]* %a_i, [9 x float]* %b_i) nounwind" [D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57]   --->   Operation 182 'call' 'call_ret_i1' <Predicate = true> <Delay = 0.87> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 40 <SV = 39> <Delay = 0.87>
ST_40 : Operation 183 [14/46] (0.87ns)   --->   "%call_ret_i1 = call fastcc { float, float, float, float, float, float, float, float, float } @matrix_multiply_top.1([9 x float]* %a_i, [9 x float]* %b_i) nounwind" [D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57]   --->   Operation 183 'call' 'call_ret_i1' <Predicate = true> <Delay = 0.87> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 41 <SV = 40> <Delay = 0.87>
ST_41 : Operation 184 [13/46] (0.87ns)   --->   "%call_ret_i1 = call fastcc { float, float, float, float, float, float, float, float, float } @matrix_multiply_top.1([9 x float]* %a_i, [9 x float]* %b_i) nounwind" [D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57]   --->   Operation 184 'call' 'call_ret_i1' <Predicate = true> <Delay = 0.87> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 42 <SV = 41> <Delay = 0.87>
ST_42 : Operation 185 [12/46] (0.87ns)   --->   "%call_ret_i1 = call fastcc { float, float, float, float, float, float, float, float, float } @matrix_multiply_top.1([9 x float]* %a_i, [9 x float]* %b_i) nounwind" [D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57]   --->   Operation 185 'call' 'call_ret_i1' <Predicate = true> <Delay = 0.87> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 43 <SV = 42> <Delay = 0.87>
ST_43 : Operation 186 [11/46] (0.87ns)   --->   "%call_ret_i1 = call fastcc { float, float, float, float, float, float, float, float, float } @matrix_multiply_top.1([9 x float]* %a_i, [9 x float]* %b_i) nounwind" [D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57]   --->   Operation 186 'call' 'call_ret_i1' <Predicate = true> <Delay = 0.87> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 44 <SV = 43> <Delay = 0.87>
ST_44 : Operation 187 [10/46] (0.87ns)   --->   "%call_ret_i1 = call fastcc { float, float, float, float, float, float, float, float, float } @matrix_multiply_top.1([9 x float]* %a_i, [9 x float]* %b_i) nounwind" [D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57]   --->   Operation 187 'call' 'call_ret_i1' <Predicate = true> <Delay = 0.87> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 45 <SV = 44> <Delay = 0.87>
ST_45 : Operation 188 [9/46] (0.87ns)   --->   "%call_ret_i1 = call fastcc { float, float, float, float, float, float, float, float, float } @matrix_multiply_top.1([9 x float]* %a_i, [9 x float]* %b_i) nounwind" [D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57]   --->   Operation 188 'call' 'call_ret_i1' <Predicate = true> <Delay = 0.87> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 46 <SV = 45> <Delay = 0.87>
ST_46 : Operation 189 [8/46] (0.87ns)   --->   "%call_ret_i1 = call fastcc { float, float, float, float, float, float, float, float, float } @matrix_multiply_top.1([9 x float]* %a_i, [9 x float]* %b_i) nounwind" [D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57]   --->   Operation 189 'call' 'call_ret_i1' <Predicate = true> <Delay = 0.87> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 47 <SV = 46> <Delay = 0.87>
ST_47 : Operation 190 [7/46] (0.87ns)   --->   "%call_ret_i1 = call fastcc { float, float, float, float, float, float, float, float, float } @matrix_multiply_top.1([9 x float]* %a_i, [9 x float]* %b_i) nounwind" [D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57]   --->   Operation 190 'call' 'call_ret_i1' <Predicate = true> <Delay = 0.87> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 48 <SV = 47> <Delay = 0.87>
ST_48 : Operation 191 [6/46] (0.87ns)   --->   "%call_ret_i1 = call fastcc { float, float, float, float, float, float, float, float, float } @matrix_multiply_top.1([9 x float]* %a_i, [9 x float]* %b_i) nounwind" [D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57]   --->   Operation 191 'call' 'call_ret_i1' <Predicate = true> <Delay = 0.87> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 49 <SV = 48> <Delay = 0.87>
ST_49 : Operation 192 [5/46] (0.87ns)   --->   "%call_ret_i1 = call fastcc { float, float, float, float, float, float, float, float, float } @matrix_multiply_top.1([9 x float]* %a_i, [9 x float]* %b_i) nounwind" [D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57]   --->   Operation 192 'call' 'call_ret_i1' <Predicate = true> <Delay = 0.87> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 50 <SV = 49> <Delay = 0.87>
ST_50 : Operation 193 [4/46] (0.87ns)   --->   "%call_ret_i1 = call fastcc { float, float, float, float, float, float, float, float, float } @matrix_multiply_top.1([9 x float]* %a_i, [9 x float]* %b_i) nounwind" [D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57]   --->   Operation 193 'call' 'call_ret_i1' <Predicate = true> <Delay = 0.87> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 51 <SV = 50> <Delay = 0.87>
ST_51 : Operation 194 [3/46] (0.87ns)   --->   "%call_ret_i1 = call fastcc { float, float, float, float, float, float, float, float, float } @matrix_multiply_top.1([9 x float]* %a_i, [9 x float]* %b_i) nounwind" [D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57]   --->   Operation 194 'call' 'call_ret_i1' <Predicate = true> <Delay = 0.87> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 52 <SV = 51> <Delay = 0.87>
ST_52 : Operation 195 [2/46] (0.87ns)   --->   "%call_ret_i1 = call fastcc { float, float, float, float, float, float, float, float, float } @matrix_multiply_top.1([9 x float]* %a_i, [9 x float]* %b_i) nounwind" [D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57]   --->   Operation 195 'call' 'call_ret_i1' <Predicate = true> <Delay = 0.87> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 53 <SV = 52> <Delay = 1.52>
ST_53 : Operation 196 [1/46] (1.52ns)   --->   "%call_ret_i1 = call fastcc { float, float, float, float, float, float, float, float, float } @matrix_multiply_top.1([9 x float]* %a_i, [9 x float]* %b_i) nounwind" [D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57]   --->   Operation 196 'call' 'call_ret_i1' <Predicate = true> <Delay = 1.52> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_53 : Operation 197 [1/1] (0.00ns)   --->   "%c_i = extractvalue { float, float, float, float, float, float, float, float, float } %call_ret_i1, 0" [matrix_multiply.cpp:57]   --->   Operation 197 'extractvalue' 'c_i' <Predicate = true> <Delay = 0.00>
ST_53 : Operation 198 [1/1] (0.00ns)   --->   "%c_i_0_1 = extractvalue { float, float, float, float, float, float, float, float, float } %call_ret_i1, 1" [matrix_multiply.cpp:57]   --->   Operation 198 'extractvalue' 'c_i_0_1' <Predicate = true> <Delay = 0.00>
ST_53 : Operation 199 [1/1] (0.00ns)   --->   "%c_i_0_2 = extractvalue { float, float, float, float, float, float, float, float, float } %call_ret_i1, 2" [matrix_multiply.cpp:57]   --->   Operation 199 'extractvalue' 'c_i_0_2' <Predicate = true> <Delay = 0.00>
ST_53 : Operation 200 [1/1] (0.00ns)   --->   "%c_i_1 = extractvalue { float, float, float, float, float, float, float, float, float } %call_ret_i1, 3" [matrix_multiply.cpp:57]   --->   Operation 200 'extractvalue' 'c_i_1' <Predicate = true> <Delay = 0.00>
ST_53 : Operation 201 [1/1] (0.00ns)   --->   "%c_i_1_1 = extractvalue { float, float, float, float, float, float, float, float, float } %call_ret_i1, 4" [matrix_multiply.cpp:57]   --->   Operation 201 'extractvalue' 'c_i_1_1' <Predicate = true> <Delay = 0.00>
ST_53 : Operation 202 [1/1] (0.00ns)   --->   "%c_i_1_2 = extractvalue { float, float, float, float, float, float, float, float, float } %call_ret_i1, 5" [matrix_multiply.cpp:57]   --->   Operation 202 'extractvalue' 'c_i_1_2' <Predicate = true> <Delay = 0.00>
ST_53 : Operation 203 [1/1] (0.00ns)   --->   "%c_i_2 = extractvalue { float, float, float, float, float, float, float, float, float } %call_ret_i1, 6" [matrix_multiply.cpp:57]   --->   Operation 203 'extractvalue' 'c_i_2' <Predicate = true> <Delay = 0.00>
ST_53 : Operation 204 [1/1] (0.00ns)   --->   "%c_i_2_1 = extractvalue { float, float, float, float, float, float, float, float, float } %call_ret_i1, 7" [matrix_multiply.cpp:57]   --->   Operation 204 'extractvalue' 'c_i_2_1' <Predicate = true> <Delay = 0.00>
ST_53 : Operation 205 [1/1] (0.00ns)   --->   "%c_i_2_2 = extractvalue { float, float, float, float, float, float, float, float, float } %call_ret_i1, 8" [matrix_multiply.cpp:57]   --->   Operation 205 'extractvalue' 'c_i_2_2' <Predicate = true> <Delay = 0.00>

State 54 <SV = 53> <Delay = 0.96>
ST_54 : Operation 206 [1/1] (0.00ns)   --->   "%C_addr = getelementptr [9 x float]* %C, i64 0, i64 0" [matrix_multiply.cpp:62]   --->   Operation 206 'getelementptr' 'C_addr' <Predicate = true> <Delay = 0.00>
ST_54 : Operation 207 [1/1] (0.00ns)   --->   "%C_addr_1 = getelementptr [9 x float]* %C, i64 0, i64 1" [matrix_multiply.cpp:62]   --->   Operation 207 'getelementptr' 'C_addr_1' <Predicate = true> <Delay = 0.00>
ST_54 : Operation 208 [1/1] (0.96ns)   --->   "store float %c_i, float* %C_addr, align 4" [matrix_multiply.cpp:62]   --->   Operation 208 'store' <Predicate = true> <Delay = 0.96> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.96> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_54 : Operation 209 [1/1] (0.96ns)   --->   "store float %c_i_0_1, float* %C_addr_1, align 4" [matrix_multiply.cpp:62]   --->   Operation 209 'store' <Predicate = true> <Delay = 0.96> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.96> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>

State 55 <SV = 54> <Delay = 0.96>
ST_55 : Operation 210 [1/1] (0.00ns)   --->   "%C_addr_2 = getelementptr [9 x float]* %C, i64 0, i64 2" [matrix_multiply.cpp:62]   --->   Operation 210 'getelementptr' 'C_addr_2' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 211 [1/1] (0.00ns)   --->   "%C_addr_3 = getelementptr [9 x float]* %C, i64 0, i64 3" [matrix_multiply.cpp:62]   --->   Operation 211 'getelementptr' 'C_addr_3' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 212 [1/1] (0.96ns)   --->   "store float %c_i_0_2, float* %C_addr_2, align 4" [matrix_multiply.cpp:62]   --->   Operation 212 'store' <Predicate = true> <Delay = 0.96> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.96> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_55 : Operation 213 [1/1] (0.96ns)   --->   "store float %c_i_1, float* %C_addr_3, align 4" [matrix_multiply.cpp:62]   --->   Operation 213 'store' <Predicate = true> <Delay = 0.96> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.96> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>

State 56 <SV = 55> <Delay = 0.96>
ST_56 : Operation 214 [1/1] (0.00ns)   --->   "%C_addr_4 = getelementptr [9 x float]* %C, i64 0, i64 4" [matrix_multiply.cpp:62]   --->   Operation 214 'getelementptr' 'C_addr_4' <Predicate = true> <Delay = 0.00>
ST_56 : Operation 215 [1/1] (0.00ns)   --->   "%C_addr_5 = getelementptr [9 x float]* %C, i64 0, i64 5" [matrix_multiply.cpp:62]   --->   Operation 215 'getelementptr' 'C_addr_5' <Predicate = true> <Delay = 0.00>
ST_56 : Operation 216 [1/1] (0.96ns)   --->   "store float %c_i_1_1, float* %C_addr_4, align 4" [matrix_multiply.cpp:62]   --->   Operation 216 'store' <Predicate = true> <Delay = 0.96> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.96> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_56 : Operation 217 [1/1] (0.96ns)   --->   "store float %c_i_1_2, float* %C_addr_5, align 4" [matrix_multiply.cpp:62]   --->   Operation 217 'store' <Predicate = true> <Delay = 0.96> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.96> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>

State 57 <SV = 56> <Delay = 0.96>
ST_57 : Operation 218 [1/1] (0.00ns)   --->   "%C_addr_6 = getelementptr [9 x float]* %C, i64 0, i64 6" [matrix_multiply.cpp:62]   --->   Operation 218 'getelementptr' 'C_addr_6' <Predicate = true> <Delay = 0.00>
ST_57 : Operation 219 [1/1] (0.00ns)   --->   "%C_addr_7 = getelementptr [9 x float]* %C, i64 0, i64 7" [matrix_multiply.cpp:62]   --->   Operation 219 'getelementptr' 'C_addr_7' <Predicate = true> <Delay = 0.00>
ST_57 : Operation 220 [1/1] (0.96ns)   --->   "store float %c_i_2, float* %C_addr_6, align 4" [matrix_multiply.cpp:62]   --->   Operation 220 'store' <Predicate = true> <Delay = 0.96> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.96> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_57 : Operation 221 [1/1] (0.96ns)   --->   "store float %c_i_2_1, float* %C_addr_7, align 4" [matrix_multiply.cpp:62]   --->   Operation 221 'store' <Predicate = true> <Delay = 0.96> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.96> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>

State 58 <SV = 57> <Delay = 0.96>
ST_58 : Operation 222 [1/1] (0.00ns)   --->   "%C_addr_8 = getelementptr [9 x float]* %C, i64 0, i64 8" [matrix_multiply.cpp:62]   --->   Operation 222 'getelementptr' 'C_addr_8' <Predicate = true> <Delay = 0.00>
ST_58 : Operation 223 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([9 x float]* %A) nounwind, !map !14"   --->   Operation 223 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_58 : Operation 224 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([9 x float]* %B) nounwind, !map !20"   --->   Operation 224 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_58 : Operation 225 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([9 x float]* %C) nounwind, !map !24"   --->   Operation 225 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_58 : Operation 226 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([20 x i8]* @matrix_multiply_top_s) nounwind"   --->   Operation 226 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_58 : Operation 227 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind" [matrix_multiply.cpp:39]   --->   Operation 227 'specpipeline' <Predicate = true> <Delay = 0.00>
ST_58 : Operation 228 [1/1] (0.96ns)   --->   "store float %c_i_2_2, float* %C_addr_8, align 4" [matrix_multiply.cpp:62]   --->   Operation 228 'store' <Predicate = true> <Delay = 0.96> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.96> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_58 : Operation 229 [1/1] (0.00ns)   --->   "ret void" [matrix_multiply.cpp:66]   --->   Operation 229 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 1ns, clock uncertainty: 0.125ns.

 <State 1>: 0.967ns
The critical path consists of the following:
	'getelementptr' operation ('A_addr', matrix_multiply.cpp:47) [4]  (0 ns)
	'load' operation ('A_load', matrix_multiply.cpp:47) on array 'A' [56]  (0.967 ns)

 <State 2>: 0.967ns
The critical path consists of the following:
	'getelementptr' operation ('A_addr_2', matrix_multiply.cpp:47) [6]  (0 ns)
	'load' operation ('A_load_2', matrix_multiply.cpp:47) on array 'A' [60]  (0.967 ns)

 <State 3>: 0.967ns
The critical path consists of the following:
	'getelementptr' operation ('A_addr_4', matrix_multiply.cpp:47) [8]  (0 ns)
	'load' operation ('A_load_4', matrix_multiply.cpp:47) on array 'A' [64]  (0.967 ns)

 <State 4>: 0.967ns
The critical path consists of the following:
	'getelementptr' operation ('A_addr_6', matrix_multiply.cpp:47) [10]  (0 ns)
	'load' operation ('A_load_6', matrix_multiply.cpp:47) on array 'A' [68]  (0.967 ns)

 <State 5>: 0.967ns
The critical path consists of the following:
	'getelementptr' operation ('A_addr_8', matrix_multiply.cpp:47) [12]  (0 ns)
	'load' operation ('A_load_8', matrix_multiply.cpp:47) on array 'A' [72]  (0.967 ns)

 <State 6>: 0.967ns
The critical path consists of the following:
	'getelementptr' operation ('a_i_addr_6', matrix_multiply.cpp:47) [42]  (0 ns)
	'store' operation (matrix_multiply.cpp:47) of variable 'A_load_6', matrix_multiply.cpp:47 on array 'a_i', matrix_multiply.cpp:40 [69]  (0.967 ns)

 <State 7>: 0.967ns
The critical path consists of the following:
	'getelementptr' operation ('a_i_addr_8', matrix_multiply.cpp:47) [44]  (0 ns)
	'store' operation (matrix_multiply.cpp:47) of variable 'A_load_8', matrix_multiply.cpp:47 on array 'a_i', matrix_multiply.cpp:40 [73]  (0.967 ns)

 <State 8>: 0ns
The critical path consists of the following:

 <State 9>: 0.875ns
The critical path consists of the following:
	'call' operation ('call_ret_i1', D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57) to 'matrix_multiply_top.1' [92]  (0.875 ns)

 <State 10>: 0.875ns
The critical path consists of the following:
	'call' operation ('call_ret_i1', D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57) to 'matrix_multiply_top.1' [92]  (0.875 ns)

 <State 11>: 0.875ns
The critical path consists of the following:
	'call' operation ('call_ret_i1', D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57) to 'matrix_multiply_top.1' [92]  (0.875 ns)

 <State 12>: 0.875ns
The critical path consists of the following:
	'call' operation ('call_ret_i1', D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57) to 'matrix_multiply_top.1' [92]  (0.875 ns)

 <State 13>: 0.875ns
The critical path consists of the following:
	'call' operation ('call_ret_i1', D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57) to 'matrix_multiply_top.1' [92]  (0.875 ns)

 <State 14>: 0.875ns
The critical path consists of the following:
	'call' operation ('call_ret_i1', D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57) to 'matrix_multiply_top.1' [92]  (0.875 ns)

 <State 15>: 0.875ns
The critical path consists of the following:
	'call' operation ('call_ret_i1', D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57) to 'matrix_multiply_top.1' [92]  (0.875 ns)

 <State 16>: 0.875ns
The critical path consists of the following:
	'call' operation ('call_ret_i1', D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57) to 'matrix_multiply_top.1' [92]  (0.875 ns)

 <State 17>: 0.875ns
The critical path consists of the following:
	'call' operation ('call_ret_i1', D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57) to 'matrix_multiply_top.1' [92]  (0.875 ns)

 <State 18>: 0.875ns
The critical path consists of the following:
	'call' operation ('call_ret_i1', D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57) to 'matrix_multiply_top.1' [92]  (0.875 ns)

 <State 19>: 0.875ns
The critical path consists of the following:
	'call' operation ('call_ret_i1', D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57) to 'matrix_multiply_top.1' [92]  (0.875 ns)

 <State 20>: 0.875ns
The critical path consists of the following:
	'call' operation ('call_ret_i1', D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57) to 'matrix_multiply_top.1' [92]  (0.875 ns)

 <State 21>: 0.875ns
The critical path consists of the following:
	'call' operation ('call_ret_i1', D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57) to 'matrix_multiply_top.1' [92]  (0.875 ns)

 <State 22>: 0.875ns
The critical path consists of the following:
	'call' operation ('call_ret_i1', D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57) to 'matrix_multiply_top.1' [92]  (0.875 ns)

 <State 23>: 0.875ns
The critical path consists of the following:
	'call' operation ('call_ret_i1', D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57) to 'matrix_multiply_top.1' [92]  (0.875 ns)

 <State 24>: 0.875ns
The critical path consists of the following:
	'call' operation ('call_ret_i1', D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57) to 'matrix_multiply_top.1' [92]  (0.875 ns)

 <State 25>: 0.875ns
The critical path consists of the following:
	'call' operation ('call_ret_i1', D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57) to 'matrix_multiply_top.1' [92]  (0.875 ns)

 <State 26>: 0.875ns
The critical path consists of the following:
	'call' operation ('call_ret_i1', D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57) to 'matrix_multiply_top.1' [92]  (0.875 ns)

 <State 27>: 0.875ns
The critical path consists of the following:
	'call' operation ('call_ret_i1', D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57) to 'matrix_multiply_top.1' [92]  (0.875 ns)

 <State 28>: 0.875ns
The critical path consists of the following:
	'call' operation ('call_ret_i1', D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57) to 'matrix_multiply_top.1' [92]  (0.875 ns)

 <State 29>: 0.875ns
The critical path consists of the following:
	'call' operation ('call_ret_i1', D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57) to 'matrix_multiply_top.1' [92]  (0.875 ns)

 <State 30>: 0.875ns
The critical path consists of the following:
	'call' operation ('call_ret_i1', D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57) to 'matrix_multiply_top.1' [92]  (0.875 ns)

 <State 31>: 0.875ns
The critical path consists of the following:
	'call' operation ('call_ret_i1', D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57) to 'matrix_multiply_top.1' [92]  (0.875 ns)

 <State 32>: 0.875ns
The critical path consists of the following:
	'call' operation ('call_ret_i1', D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57) to 'matrix_multiply_top.1' [92]  (0.875 ns)

 <State 33>: 0.875ns
The critical path consists of the following:
	'call' operation ('call_ret_i1', D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57) to 'matrix_multiply_top.1' [92]  (0.875 ns)

 <State 34>: 0.875ns
The critical path consists of the following:
	'call' operation ('call_ret_i1', D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57) to 'matrix_multiply_top.1' [92]  (0.875 ns)

 <State 35>: 0.875ns
The critical path consists of the following:
	'call' operation ('call_ret_i1', D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57) to 'matrix_multiply_top.1' [92]  (0.875 ns)

 <State 36>: 0.875ns
The critical path consists of the following:
	'call' operation ('call_ret_i1', D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57) to 'matrix_multiply_top.1' [92]  (0.875 ns)

 <State 37>: 0.875ns
The critical path consists of the following:
	'call' operation ('call_ret_i1', D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57) to 'matrix_multiply_top.1' [92]  (0.875 ns)

 <State 38>: 0.875ns
The critical path consists of the following:
	'call' operation ('call_ret_i1', D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57) to 'matrix_multiply_top.1' [92]  (0.875 ns)

 <State 39>: 0.875ns
The critical path consists of the following:
	'call' operation ('call_ret_i1', D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57) to 'matrix_multiply_top.1' [92]  (0.875 ns)

 <State 40>: 0.875ns
The critical path consists of the following:
	'call' operation ('call_ret_i1', D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57) to 'matrix_multiply_top.1' [92]  (0.875 ns)

 <State 41>: 0.875ns
The critical path consists of the following:
	'call' operation ('call_ret_i1', D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57) to 'matrix_multiply_top.1' [92]  (0.875 ns)

 <State 42>: 0.875ns
The critical path consists of the following:
	'call' operation ('call_ret_i1', D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57) to 'matrix_multiply_top.1' [92]  (0.875 ns)

 <State 43>: 0.875ns
The critical path consists of the following:
	'call' operation ('call_ret_i1', D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57) to 'matrix_multiply_top.1' [92]  (0.875 ns)

 <State 44>: 0.875ns
The critical path consists of the following:
	'call' operation ('call_ret_i1', D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57) to 'matrix_multiply_top.1' [92]  (0.875 ns)

 <State 45>: 0.875ns
The critical path consists of the following:
	'call' operation ('call_ret_i1', D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57) to 'matrix_multiply_top.1' [92]  (0.875 ns)

 <State 46>: 0.875ns
The critical path consists of the following:
	'call' operation ('call_ret_i1', D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57) to 'matrix_multiply_top.1' [92]  (0.875 ns)

 <State 47>: 0.875ns
The critical path consists of the following:
	'call' operation ('call_ret_i1', D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57) to 'matrix_multiply_top.1' [92]  (0.875 ns)

 <State 48>: 0.875ns
The critical path consists of the following:
	'call' operation ('call_ret_i1', D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57) to 'matrix_multiply_top.1' [92]  (0.875 ns)

 <State 49>: 0.875ns
The critical path consists of the following:
	'call' operation ('call_ret_i1', D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57) to 'matrix_multiply_top.1' [92]  (0.875 ns)

 <State 50>: 0.875ns
The critical path consists of the following:
	'call' operation ('call_ret_i1', D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57) to 'matrix_multiply_top.1' [92]  (0.875 ns)

 <State 51>: 0.875ns
The critical path consists of the following:
	'call' operation ('call_ret_i1', D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57) to 'matrix_multiply_top.1' [92]  (0.875 ns)

 <State 52>: 0.875ns
The critical path consists of the following:
	'call' operation ('call_ret_i1', D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57) to 'matrix_multiply_top.1' [92]  (0.875 ns)

 <State 53>: 1.52ns
The critical path consists of the following:
	'call' operation ('call_ret_i1', D:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/linear_algebra/hls_matrix_multiply.h:560->matrix_multiply.cpp:57) to 'matrix_multiply_top.1' [92]  (1.52 ns)

 <State 54>: 0.967ns
The critical path consists of the following:
	'getelementptr' operation ('C_addr', matrix_multiply.cpp:62) [22]  (0 ns)
	'store' operation (matrix_multiply.cpp:62) of variable 'c_i', matrix_multiply.cpp:57 on array 'C' [102]  (0.967 ns)

 <State 55>: 0.967ns
The critical path consists of the following:
	'getelementptr' operation ('C_addr_2', matrix_multiply.cpp:62) [24]  (0 ns)
	'store' operation (matrix_multiply.cpp:62) of variable 'c_i_0_2', matrix_multiply.cpp:57 on array 'C' [104]  (0.967 ns)

 <State 56>: 0.967ns
The critical path consists of the following:
	'getelementptr' operation ('C_addr_4', matrix_multiply.cpp:62) [26]  (0 ns)
	'store' operation (matrix_multiply.cpp:62) of variable 'c_i_1_1', matrix_multiply.cpp:57 on array 'C' [106]  (0.967 ns)

 <State 57>: 0.967ns
The critical path consists of the following:
	'getelementptr' operation ('C_addr_6', matrix_multiply.cpp:62) [28]  (0 ns)
	'store' operation (matrix_multiply.cpp:62) of variable 'c_i_2', matrix_multiply.cpp:57 on array 'C' [108]  (0.967 ns)

 <State 58>: 0.967ns
The critical path consists of the following:
	'getelementptr' operation ('C_addr_8', matrix_multiply.cpp:62) [30]  (0 ns)
	'store' operation (matrix_multiply.cpp:62) of variable 'c_i_2_2', matrix_multiply.cpp:57 on array 'C' [110]  (0.967 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
