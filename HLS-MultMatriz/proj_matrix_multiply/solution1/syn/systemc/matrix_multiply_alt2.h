// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _matrix_multiply_alt2_HH_
#define _matrix_multiply_alt2_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "matrix_multiply_tcud.h"
#include "matrix_multiply_tdEe.h"
#include "matrix_multiply_abkb.h"

namespace ap_rtl {

struct matrix_multiply_alt2 : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<4> > A_address0;
    sc_out< sc_logic > A_ce0;
    sc_in< sc_lv<32> > A_q0;
    sc_out< sc_lv<4> > B_address0;
    sc_out< sc_logic > B_ce0;
    sc_in< sc_lv<32> > B_q0;
    sc_out< sc_lv<4> > C_address0;
    sc_out< sc_logic > C_ce0;
    sc_out< sc_logic > C_we0;
    sc_out< sc_lv<32> > C_d0;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    matrix_multiply_alt2(sc_module_name name);
    SC_HAS_PROCESS(matrix_multiply_alt2);

    ~matrix_multiply_alt2();

    sc_trace_file* mVcdFile;

    matrix_multiply_abkb* sum_mult_U;
    matrix_multiply_tcud<1,8,32,32,32>* matrix_multiply_tcud_U1;
    matrix_multiply_tdEe<1,4,32,32,32>* matrix_multiply_tdEe_U2;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<5> > indvar_flatten1_reg_116;
    sc_signal< sc_lv<2> > Col_assign_2_reg_127;
    sc_signal< sc_lv<4> > indvar_flatten_reg_138;
    sc_signal< sc_lv<2> > Row_assign_reg_149;
    sc_signal< sc_lv<2> > Col_assign_reg_160;
    sc_signal< sc_lv<1> > exitcond_flatten1_fu_181_p2;
    sc_signal< sc_lv<1> > exitcond_flatten1_reg_403;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter4;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter5;
    sc_signal< bool > ap_block_state8_pp0_stage0_iter6;
    sc_signal< bool > ap_block_state9_pp0_stage0_iter7;
    sc_signal< bool > ap_block_state10_pp0_stage0_iter8;
    sc_signal< bool > ap_block_state11_pp0_stage0_iter9;
    sc_signal< bool > ap_block_state12_pp0_stage0_iter10;
    sc_signal< bool > ap_block_state13_pp0_stage0_iter11;
    sc_signal< bool > ap_block_state14_pp0_stage0_iter12;
    sc_signal< bool > ap_block_state15_pp0_stage0_iter13;
    sc_signal< bool > ap_block_state16_pp0_stage0_iter14;
    sc_signal< bool > ap_block_state17_pp0_stage0_iter15;
    sc_signal< bool > ap_block_state18_pp0_stage0_iter16;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > exitcond_flatten1_reg_403_pp0_iter1_reg;
    sc_signal< sc_lv<1> > exitcond_flatten1_reg_403_pp0_iter2_reg;
    sc_signal< sc_lv<1> > exitcond_flatten1_reg_403_pp0_iter3_reg;
    sc_signal< sc_lv<1> > exitcond_flatten1_reg_403_pp0_iter4_reg;
    sc_signal< sc_lv<1> > exitcond_flatten1_reg_403_pp0_iter5_reg;
    sc_signal< sc_lv<1> > exitcond_flatten1_reg_403_pp0_iter6_reg;
    sc_signal< sc_lv<5> > indvar_flatten_next1_fu_187_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<1> > tmp_mid2_fu_225_p3;
    sc_signal< sc_lv<1> > tmp_mid2_reg_412;
    sc_signal< sc_lv<1> > tmp_mid2_reg_412_pp0_iter1_reg;
    sc_signal< sc_lv<1> > tmp_mid2_reg_412_pp0_iter2_reg;
    sc_signal< sc_lv<1> > tmp_mid2_reg_412_pp0_iter3_reg;
    sc_signal< sc_lv<1> > tmp_mid2_reg_412_pp0_iter4_reg;
    sc_signal< sc_lv<1> > tmp_mid2_reg_412_pp0_iter5_reg;
    sc_signal< sc_lv<1> > tmp_mid2_reg_412_pp0_iter6_reg;
    sc_signal< sc_lv<1> > tmp_mid2_reg_412_pp0_iter7_reg;
    sc_signal< sc_lv<1> > tmp_mid2_reg_412_pp0_iter8_reg;
    sc_signal< sc_lv<1> > tmp_mid2_reg_412_pp0_iter9_reg;
    sc_signal< sc_lv<1> > tmp_mid2_reg_412_pp0_iter10_reg;
    sc_signal< sc_lv<1> > tmp_mid2_reg_412_pp0_iter11_reg;
    sc_signal< sc_lv<1> > tmp_mid2_reg_412_pp0_iter12_reg;
    sc_signal< sc_lv<1> > tmp_mid2_reg_412_pp0_iter13_reg;
    sc_signal< sc_lv<1> > tmp_mid2_reg_412_pp0_iter14_reg;
    sc_signal< sc_lv<1> > tmp_mid2_reg_412_pp0_iter15_reg;
    sc_signal< sc_lv<1> > tmp_mid2_13_fu_245_p3;
    sc_signal< sc_lv<1> > tmp_mid2_13_reg_416;
    sc_signal< sc_lv<1> > tmp_mid2_13_reg_416_pp0_iter1_reg;
    sc_signal< sc_lv<1> > tmp_mid2_13_reg_416_pp0_iter2_reg;
    sc_signal< sc_lv<1> > tmp_mid2_13_reg_416_pp0_iter3_reg;
    sc_signal< sc_lv<1> > tmp_mid2_13_reg_416_pp0_iter4_reg;
    sc_signal< sc_lv<1> > tmp_mid2_13_reg_416_pp0_iter5_reg;
    sc_signal< sc_lv<1> > tmp_mid2_13_reg_416_pp0_iter6_reg;
    sc_signal< sc_lv<1> > tmp_mid2_13_reg_416_pp0_iter7_reg;
    sc_signal< sc_lv<1> > tmp_mid2_13_reg_416_pp0_iter8_reg;
    sc_signal< sc_lv<1> > tmp_mid2_13_reg_416_pp0_iter9_reg;
    sc_signal< sc_lv<1> > tmp_mid2_13_reg_416_pp0_iter10_reg;
    sc_signal< sc_lv<1> > tmp_mid2_13_reg_416_pp0_iter11_reg;
    sc_signal< sc_lv<1> > tmp_mid2_13_reg_416_pp0_iter12_reg;
    sc_signal< sc_lv<1> > tmp_mid2_13_reg_416_pp0_iter13_reg;
    sc_signal< sc_lv<1> > tmp_mid2_13_reg_416_pp0_iter14_reg;
    sc_signal< sc_lv<1> > tmp_mid2_13_reg_416_pp0_iter15_reg;
    sc_signal< sc_lv<2> > tmp_i_i_mid2_v_fu_253_p3;
    sc_signal< sc_lv<2> > tmp_i_i_mid2_v_reg_420;
    sc_signal< sc_lv<2> > Col_assign_mid2_fu_291_p3;
    sc_signal< sc_lv<2> > Col_assign_mid2_reg_427;
    sc_signal< sc_lv<2> > tmp_11_mid2_fu_299_p3;
    sc_signal< sc_lv<2> > tmp_11_mid2_reg_432;
    sc_signal< sc_lv<2> > c_fu_307_p2;
    sc_signal< sc_lv<4> > indvar_flatten_next_fu_319_p3;
    sc_signal< sc_lv<5> > tmp_22_fu_392_p2;
    sc_signal< sc_lv<5> > tmp_22_reg_459;
    sc_signal< sc_lv<5> > tmp_22_reg_459_pp0_iter2_reg;
    sc_signal< sc_lv<5> > tmp_22_reg_459_pp0_iter3_reg;
    sc_signal< sc_lv<5> > tmp_22_reg_459_pp0_iter4_reg;
    sc_signal< sc_lv<5> > tmp_22_reg_459_pp0_iter5_reg;
    sc_signal< sc_lv<5> > tmp_22_reg_459_pp0_iter6_reg;
    sc_signal< sc_lv<32> > cast_in_a_reg_464;
    sc_signal< sc_lv<32> > cast_in_b_reg_469;
    sc_signal< sc_lv<32> > grp_fu_177_p2;
    sc_signal< sc_lv<32> > mult_reg_474;
    sc_signal< sc_lv<32> > mult_reg_474_pp0_iter7_reg;
    sc_signal< sc_lv<4> > C_addr_reg_480;
    sc_signal< sc_lv<4> > C_addr_reg_480_pp0_iter8_reg;
    sc_signal< sc_lv<4> > C_addr_reg_480_pp0_iter9_reg;
    sc_signal< sc_lv<4> > C_addr_reg_480_pp0_iter10_reg;
    sc_signal< sc_lv<4> > C_addr_reg_480_pp0_iter11_reg;
    sc_signal< sc_lv<4> > C_addr_reg_480_pp0_iter12_reg;
    sc_signal< sc_lv<4> > C_addr_reg_480_pp0_iter13_reg;
    sc_signal< sc_lv<4> > C_addr_reg_480_pp0_iter14_reg;
    sc_signal< sc_lv<4> > C_addr_reg_480_pp0_iter15_reg;
    sc_signal< sc_lv<4> > sum_mult_addr_reg_485;
    sc_signal< sc_lv<4> > sum_mult_addr_reg_485_pp0_iter8_reg;
    sc_signal< sc_lv<4> > sum_mult_addr_reg_485_pp0_iter9_reg;
    sc_signal< sc_lv<4> > sum_mult_addr_reg_485_pp0_iter10_reg;
    sc_signal< sc_lv<4> > sum_mult_addr_reg_485_pp0_iter11_reg;
    sc_signal< sc_lv<4> > sum_mult_addr_reg_485_pp0_iter12_reg;
    sc_signal< sc_lv<4> > sum_mult_addr_reg_485_pp0_iter13_reg;
    sc_signal< sc_lv<4> > sum_mult_addr_reg_485_pp0_iter14_reg;
    sc_signal< sc_lv<32> > sum_mult_q0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter8;
    sc_signal< sc_lv<32> > grp_fu_171_p2;
    sc_signal< sc_lv<32> > tmp_13_reg_496;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter5;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter6;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter7;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter9;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter10;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter11;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter12;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter13;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter14;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter15;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter16;
    sc_signal< sc_lv<4> > sum_mult_address0;
    sc_signal< sc_logic > sum_mult_ce0;
    sc_signal< sc_logic > sum_mult_we0;
    sc_signal< sc_logic > sum_mult_ce1;
    sc_signal< sc_logic > sum_mult_we1;
    sc_signal< sc_lv<2> > ap_phi_mux_Col_assign_2_phi_fu_131_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<2> > ap_phi_mux_Row_assign_phi_fu_153_p4;
    sc_signal< sc_lv<64> > tmp_28_cast_fu_373_p1;
    sc_signal< sc_lv<64> > tmp_29_cast_fu_387_p1;
    sc_signal< sc_lv<64> > tmp_30_cast_fu_398_p1;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_199_p2;
    sc_signal< sc_lv<2> > k_fu_193_p2;
    sc_signal< sc_lv<1> > tmp_mid1_fu_213_p2;
    sc_signal< sc_lv<1> > tmp3_fu_219_p2;
    sc_signal< sc_lv<1> > tmp_mid1_12_fu_233_p2;
    sc_signal< sc_lv<1> > tmp_2_fu_239_p2;
    sc_signal< sc_lv<1> > exitcond_fu_267_p2;
    sc_signal< sc_lv<1> > not_exitcond_flatten_fu_261_p2;
    sc_signal< sc_lv<2> > Row_assign_mid_fu_205_p3;
    sc_signal< sc_lv<1> > exitcond_mid_fu_273_p2;
    sc_signal< sc_lv<1> > tmp_18_fu_285_p2;
    sc_signal< sc_lv<2> > r_fu_279_p2;
    sc_signal< sc_lv<4> > indvar_flatten_op_fu_313_p2;
    sc_signal< sc_lv<4> > tmp_s_fu_330_p3;
    sc_signal< sc_lv<5> > p_shl1_cast_fu_337_p1;
    sc_signal< sc_lv<5> > tmp_i_i_mid2_cast_fu_327_p1;
    sc_signal< sc_lv<4> > tmp_fu_350_p3;
    sc_signal< sc_lv<5> > p_shl_cast_fu_357_p1;
    sc_signal< sc_lv<5> > tmp_11_mid2_cast_fu_347_p1;
    sc_signal< sc_lv<5> > tmp_19_fu_361_p2;
    sc_signal< sc_lv<5> > tmp_20_fu_367_p2;
    sc_signal< sc_lv<5> > tmp_i_i4_cast_fu_378_p1;
    sc_signal< sc_lv<5> > tmp_17_fu_341_p2;
    sc_signal< sc_lv<5> > tmp_21_fu_381_p2;
    sc_signal< sc_logic > ap_CS_fsm_state19;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state19;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<5> ap_const_lv5_1B;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<4> ap_const_lv4_9;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_A_address0();
    void thread_A_ce0();
    void thread_B_address0();
    void thread_B_ce0();
    void thread_C_address0();
    void thread_C_ce0();
    void thread_C_d0();
    void thread_C_we0();
    void thread_Col_assign_mid2_fu_291_p3();
    void thread_Row_assign_mid_fu_205_p3();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state19();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state10_pp0_stage0_iter8();
    void thread_ap_block_state11_pp0_stage0_iter9();
    void thread_ap_block_state12_pp0_stage0_iter10();
    void thread_ap_block_state13_pp0_stage0_iter11();
    void thread_ap_block_state14_pp0_stage0_iter12();
    void thread_ap_block_state15_pp0_stage0_iter13();
    void thread_ap_block_state16_pp0_stage0_iter14();
    void thread_ap_block_state17_pp0_stage0_iter15();
    void thread_ap_block_state18_pp0_stage0_iter16();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_block_state5_pp0_stage0_iter3();
    void thread_ap_block_state6_pp0_stage0_iter4();
    void thread_ap_block_state7_pp0_stage0_iter5();
    void thread_ap_block_state8_pp0_stage0_iter6();
    void thread_ap_block_state9_pp0_stage0_iter7();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_Col_assign_2_phi_fu_131_p4();
    void thread_ap_phi_mux_Row_assign_phi_fu_153_p4();
    void thread_ap_ready();
    void thread_c_fu_307_p2();
    void thread_exitcond_flatten1_fu_181_p2();
    void thread_exitcond_flatten_fu_199_p2();
    void thread_exitcond_fu_267_p2();
    void thread_exitcond_mid_fu_273_p2();
    void thread_indvar_flatten_next1_fu_187_p2();
    void thread_indvar_flatten_next_fu_319_p3();
    void thread_indvar_flatten_op_fu_313_p2();
    void thread_k_fu_193_p2();
    void thread_not_exitcond_flatten_fu_261_p2();
    void thread_p_shl1_cast_fu_337_p1();
    void thread_p_shl_cast_fu_357_p1();
    void thread_r_fu_279_p2();
    void thread_sum_mult_address0();
    void thread_sum_mult_ce0();
    void thread_sum_mult_ce1();
    void thread_sum_mult_we0();
    void thread_sum_mult_we1();
    void thread_tmp3_fu_219_p2();
    void thread_tmp_11_mid2_cast_fu_347_p1();
    void thread_tmp_11_mid2_fu_299_p3();
    void thread_tmp_17_fu_341_p2();
    void thread_tmp_18_fu_285_p2();
    void thread_tmp_19_fu_361_p2();
    void thread_tmp_20_fu_367_p2();
    void thread_tmp_21_fu_381_p2();
    void thread_tmp_22_fu_392_p2();
    void thread_tmp_28_cast_fu_373_p1();
    void thread_tmp_29_cast_fu_387_p1();
    void thread_tmp_2_fu_239_p2();
    void thread_tmp_30_cast_fu_398_p1();
    void thread_tmp_fu_350_p3();
    void thread_tmp_i_i4_cast_fu_378_p1();
    void thread_tmp_i_i_mid2_cast_fu_327_p1();
    void thread_tmp_i_i_mid2_v_fu_253_p3();
    void thread_tmp_mid1_12_fu_233_p2();
    void thread_tmp_mid1_fu_213_p2();
    void thread_tmp_mid2_13_fu_245_p3();
    void thread_tmp_mid2_fu_225_p3();
    void thread_tmp_s_fu_330_p3();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
